---
import { Icon } from 'astro-icon/components';
import clsx from 'clsx';

import config from '@/config';

const pathname = Astro.url.pathname;
---

<div class="md:hidden">
  <button
    aria-label="Mobile Menu"
    type="button"
    class="flex items-center p-2"
    id="mobile-navigation-menu-button"
  >
    <Icon
      name="hugeicons:cancel-01"
      size={24}
      class="hidden"
      id="mobile-navigation-menu-button-x"
    />
    <Icon
      name="hugeicons:menu-02"
      size={24}
      id="mobile-navigation-menu-button-menu"
    />
  </button>
  <div
    id="mobile-navigation-menu"
    data-menu-opened="false"
    class={clsx(
      "translate-y-full",
      "fixed left-0 z-10 mt-3 flex h-screen w-screen flex-col bg-neutral-100 duration-150 ease-in-out dark:bg-neutral-900"
    )}
  >
    <div class="overflow-y-auto mb-5">
      <div class="grid divide-y divide-neutral-300 p-3 dark:divide-neutral-700">
        {
          config.headbar.routes.map((item) => (
            <a href={item.href}>
              <p
                class={clsx(
                  (pathname === "/"
                    ? pathname === item.href
                    : pathname.startsWith(item.href ?? "") &&
                      item.href !== "/") && "text-orange-600",
                  "cursor-pointer p-4 text-center"
                )}
              >
                {item.name}
              </p>
            </a>
          ))
        }
      </div>
    </div>
  </div>
</div>

<script>
  const handleMobileNavigationToggleClick = () => {
    const element = document.getElementById("mobile-navigation-menu");
    const xButton = document.getElementById("mobile-navigation-menu-button-x");
    const menuButton = document.getElementById(
      "mobile-navigation-menu-button-menu"
    );

    if (!xButton || !menuButton || !element) {
      return;
    }

    const isOpened = element.getAttribute("data-menu-opened") === "true";

    if (isOpened) {
      element.setAttribute("data-menu-opened", "false");
      // Replace translate-y-0 with translate-y-full to hide the menu
      setTimeout(() => {
        element.classList.add("translate-y-full");
        element.classList.remove("translate-y-0");
        xButton.classList.add("hidden");
        menuButton.classList.remove("hidden");

        // Enable global scroll
        document.body.style.overflow = "auto";
      }, 0);
    } else {
      element.setAttribute("data-menu-opened", "true");
      // Replace translate-y-full with translate-y-0 to show the menu
      setTimeout(() => {
        element.classList.add("translate-y-0");
        element.classList.remove("translate-y-full");
        xButton.classList.remove("hidden");
        menuButton.classList.add("hidden");

        // Disable global scroll
        document.body.style.overflow = "hidden";
      }, 0);
    }
  };

  document
    .getElementById("mobile-navigation-menu-button")
    ?.addEventListener("click", handleMobileNavigationToggleClick);
</script>
